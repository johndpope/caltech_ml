ls()
?ls
omega.delta = .05
omega.epsilon = .05
omega.vc_dim = 10
omega
omega
omega.delta
ls(omega)
typeof(omega)
omega
delta
x = 1
typeof(x)
rm x
rm(x)
x
objects()
other.scot = "scot"
typeof(other.scot)
objects()
rm other.scot
rm(other.scot)
omega.func = function(N, delta) {
maxh = function(vcd, N) {
combn(10, 0:5)
combn
?combn
for (i in 1:3) print i
for (i in 1:3) print(i)
maxh
objects
objects()
max_h = function(vcd, N) {
  sum = 0
  for (i in 0:vcd) {
v = 1:10
v
?lapply
?lapply
lapply(v, x+1)
inc = function(x) x = x+1
inc(1)
inc = function(x) x = x+1
x = inc(1)
x
print(inc(1))
inc(1)
lapply(v, inc(1))
lapply(v, inc)
incl = lapply(v, inc)
incl
print(lapply(v, inc))
v
sum(lapply(v, inc))
sum(vapply(v, inc))
?lapply
?vapply
sum(vapply(v, inc, v))
objects()
max_h = function(vcd, N) {
  sum = 0
  for (i in 0:vcd) {
    sum = sum + combn(N, i)
  }
  sum
}
max_h(1, 2)
combn(2,1)
?combn
length(combn(2,1))
combn(2,2)
length(combn(2,2))
length(combn(1:2,2))
?combn
?combn
?choose
?choose
?choose
?choose
choose(2,1)
choose(3,1)
choose(2,2)
maxh
maxh_h
max_h
max_h
function(vcd, N) {
  sum = 0
  for (i in 0:vcd) {
    sum = sum + combn(N, i)
  }
  sum
}
source("funcs.R")
source("funcs.R")
max_h
max_h(1, 2)
max_h(2, 2)
z = 0
z += 1
print(c(z, "hi))
print(c(z, "hi"))
print(paste(z, "hi"))
source("funcs.R")
max_h(2,2)
omega
omega
sqrt(2)
?curve
?plot
plot(sin, -pi, pi)
plot(max_h)
max_h
?curve
plot(max_h, vcd=10)
plot(max_h, vcd=10, N=5)
?par
curve(x^2)
curve(max_h(vcd=10, x))
ln(2)
?ln
??ln
?log
??natural log
??log
?log
log(e)
e
??log
?log
exp(1)
log(exp(1))
source("funcs.R")
omega(10, .05, 100)
source("funcs.R")
omega(10, .05, 100)
range(420,450)
Nrange = 400000:480000
curve(omega(10, .05, x), from=400000, to=480000)
curve(omega(10, .05, N), from=400000, to=480000)
curve(omega(10, .05, x), from=400000, to=480000)
?root
??root
?uniroot
?curve
dev.copy(pdf, "q1_omega.plot")
dev.off()
curve(omega(10, .05, x), from=0, to=100000)
curve(omega(10, .05, x), from=0, to=1000)
2log(e)
imp
?implicit
??implicit
imp.solve
?outer
source("funcs.R")
rad_omega(10, .05, 10000)
omega(10, .05, 10000)
?plot
?points
?lines
plot(max_h, vcd=10, N=5)
?plot
vc = 50
d = .05
plot(omega(vcd=vc, delta=d, x), from=0, to=10000)
warnings()
lines(omega(vcd=vc, delta=d, x), from=0, to=10000)
?plot
dev.copy(pdf, "q1_omega.plot")
lines(omega(vcd=vc, delta=d, x), from=0, to=10000)
lines(omega(vcd=vc, delta=d, x), from=0, to=10000)
plot(max_h, vcd=10, N=5)
plot(omega(vcd=vc, delta=d, x))
plot(omega(vcd=vc, delta=d, x))
curve(omega(10, .05, x), from=0, to=1000)
curve(omega(10, .05, x), from=0, to=1000)
curve(omega(10, .05, x), from=0, to=1000)
objects
objects()
curve(omega(10, .05, x))
install.packages("ggplot2")
install.packages("ggplot2")
version()
??version
R.version
install.packages("ggplot2")
q()
